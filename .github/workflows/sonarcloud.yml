name: SonarCloud
on:
  push:
    branches:
      - master
      - sonar-validation
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      checks: write
      issues: read
      security-events: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.sonar/cache
          key: ${{ runner.os }}-node-sonar-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-sonar-

      - name: Install dependencies
        run: npm ci

      - name: Run Tests with Coverage
        run: npm run test:coverage
        
      # Add coverage report parsing
      - name: Process Coverage Report
        id: coverage
        run: |
          TOTAL=$(node -p "JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json')).total.lines.pct")
          COMMANDS=$(node -p "JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json'))['cli/commands'].lines.pct")
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "commands=$COMMANDS" >> $GITHUB_OUTPUT
          
      - name: Check Coverage Thresholds
        run: |
          TOTAL="${{ steps.coverage.outputs.total }}"
          COMMANDS="${{ steps.coverage.outputs.commands }}"
          
          if (( $(echo "$TOTAL < 80" | bc -l) )); then
            echo "❌ Total coverage ($TOTAL%) is below 80%"
            exit 1
          fi
          
          if (( $(echo "$COMMANDS < 70" | bc -l) )); then
            echo "❌ CLI Commands coverage ($COMMANDS%) is below 70%"
            exit 1
          fi

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_OPTS: -Xmx2048m

      - name: Check Quality Gate
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Analysis Summary
        if: always()
        run: |
          echo "### SonarCloud Analysis Results 📊" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| Total Coverage | ${{ steps.coverage.outputs.total }}% |" >> $GITHUB_STEP_SUMMARY
          echo "| CLI Commands Coverage | ${{ steps.coverage.outputs.commands }}% |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.sonarqube-quality-gate-check.outcome }}" == "success" ]]; then
            echo "✅ Quality Gate: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Quality Gate: Failed" >> $GITHUB_STEP_SUMMARY
          fi